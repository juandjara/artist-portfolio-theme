---
import { getRelativeLocaleUrl } from "astro:i18n";
import { formatImageURL, getTranslations } from "../../lib/directus";
import type {
  BlockCategories,
  BlockCategoriesCategories,
  Category,
} from "../../lib/directus.types";
import { i18nConfig } from "../../lib/i18n";

interface Props {
  block: BlockCategories;
}

const language = Astro.currentLocale ?? i18nConfig.defaultLocale;
const block = Astro.props.block;
const categories = block.categories.map((c) => {
  const bcc = c as BlockCategoriesCategories;
  const category = bcc.categories_id as Category;
  const translations = getTranslations(category.translations, language);
  const name = translations?.name;

  return {
    name,
    background: category.background,
    link: getRelativeLocaleUrl(language, `/archive/${category.permalink}`, { normalizeLocale: false })
  };
});
---

<ul class="md:flex justify-around gap-3 mb-3 mt-12">
  {
    categories.map((c) => (
      <li class="my-3 md:my-0 transition-colors flex-grow">
        <a
          class="group flex justify-center items-center relative overflow-hidden h-[300px] rounded-lg transition-shadow shadow-xs hover:shadow-md shadow-rose-900 dark:shadow-rose-200"
          href={c.link}
        >
          {c.background ? (
            <div class="transform-3d transition-transform group-hover:scale-110 duration-300 ease-out absolute z-10 inset-0">
              <img
                class="rounded-lg object-cover object-center h-full w-full"
                src={formatImageURL(c.background as string, "width=500")}
              />
            </div>
          ) : null}
        </a>
        <p class="py-1 px-0.5 italic">{c.name}</p>
      </li>
    ))
  }
</ul>
<a
  href={getRelativeLocaleUrl(language, `/archive`, { normalizeLocale: false })}
  class="text-center block w-full text-lg font-semibold mt-4"
>Ver todo</a>
