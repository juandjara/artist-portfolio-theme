---
import { getCategories, getPosts, translateString } from "../../lib/directus"
import { i18nConfig } from "../../lib/i18n"
import PostGrid from '../PostGrid'

const categoryId = Astro.params.category ?? null
const language = Astro.currentLocale ?? i18nConfig.defaultLocale;

const [_categories, _posts] = await Promise.all([
  getCategories(language),
  getPosts(categoryId, language)
])

const categories = _categories.filter((c) => c.status === 'visible')

const _postCategoryMap = {} as Record<string, Set<string>>
for (const cat of categories) {
  for (const id of (cat.postIds ?? [])) {
    _postCategoryMap[id] = _postCategoryMap[id] || new Set()
    if (cat.name) {
      _postCategoryMap[id].add(cat.name)
    }
  }
}
const postCategoryMap = Object.fromEntries(
  Object.entries(_postCategoryMap).map(([key, value]) => [key, Array.from(value)])
)

const category = _categories.find((c) => c.permalink === categoryId)

if (category && !categories.includes(category)) {
  categories.push(category)
}

const { numProtected, posts } = _posts

const all = await translateString('all', language)

categories.unshift({
  background: '',
  id: 'all',
  permalink: 'all',
  link: `/${language}/archive`,
  name: all,
  status: '',
  postIds: []
})

function isCatSelected(id: string) {
  return id === (categoryId ?? 'all')
}

const _labels = await Promise.all([
  translateString('loading', language),
  translateString('reveal', language),
  translateString('hidden-posts', language)
])

const labels = {
  loading: _labels[0],
  reveal: _labels[1],
  hidden: _labels[2],
}

---
<div class="-mx-2 pb-4 border-b border-rose-800">
  <ul class="mx-2 flex flex-wrap justify-center gap-3">
    {categories.map((c) => (
      <li>
        <a
          href={c.link}
          class:list={[
            {
              'bg-rose-100 dark:bg-rose-900/50': isCatSelected(c.permalink ?? ''),
              'hover:bg-rose-100/50 dark:hover:bg-rose-100/20': !isCatSelected(c.permalink ?? ''),
              'opacity-50': c.status === 'protected'
            },
            'px-3 py-1 text-lg shadow hover:shadow-md transition-colors rounded-lg border border-rose-800 dark:border-rose-300'
          ]}
        >{c.name}</a>
      </li>
    ))}
  </ul>
</div>
<PostGrid
  client:load
  labels={labels}
  posts={posts}
  numProtected={numProtected}
  category={categoryId ?? ''}
  language={language}
  postCategoryMap={postCategoryMap}
/>
